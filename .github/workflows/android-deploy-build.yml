name: Deploy build to Google play

on:
  workflow_call:
    inputs:
      dry_run:
        type: boolean
        required: false
        default: true #remove at end of testingthis should not be here
        description: When enabled, workflow will not execute the fastlane command to deploy a build, but print it instead
      package_name:
        description: The unique package name for the android app, e.g. uk.co.guardian.feast
        required: true
        type: string  
      artifact_name:
        description: Name of the build artifacts (set when calling actions/upload-artifact in the build automation)
        required: true
        type: string
      track:
        description: Play store track to deploy to (e.g. production, internal)
        required: true
        default: internal
        type: string
      rollout:
        description: Percentage rollout [0 - 1]
        required: true
        default: '1.00'
        type: string
      gitref:
        description: Branch or tag to deploy
        required: false
        default: main  #remove at end of testing!
        type: string
      sha:
        description: Commit hash to deploy (optional)
        required: false
        type: string
    secrets:
      GOOGLE_CLOUD_API_CREDENTIALS:
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: "job: ${{ inputs.track }} release from ${{ inputs.gitref }}${{ inputs.sha }} to ${{ inputs.rollout }} of users"
        run: |
          echo "TRACK=${{ inputs.track }}" >> $GITHUB_ENV
          echo "PACKAGE_NAME=${{ inputs.package_name }}" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=${{ inputs.artifact_name }}" >> $GITHUB_ENV
          echo "ROLLOUT=${{ inputs.rollout }}" >> $GITHUB_ENV
          echo "GITREF=${{ inputs.gitref }}" >> $GITHUB_ENV
          echo "SHA=${{ inputs.sha }}" >> $GITHUB_ENV

      - name: Determinate target sha if not given to action
        if: env.SHA == ''
        run: |
          test -f .git/refs/heads/${{ env.GITREF }} || git fetch --no-tags origin ${{ env.GITREF }}:${{ env.GITREF }}
          SHA=$(git rev-parse ${{ env.GITREF }})
          echo "SHA=$SHA" >> $GITHUB_ENV

      - name: Download apk ${{ env.ARTIFACT_NAME }} from target build ${{ env.SHA }}
        # Note: we use the commit hash to specify the version since this is not an official and trusted action
        uses: dawidd6/action-download-artifact@bf251b5aa9c2f7eeb574a96ee720e24f801b7c11 #@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build.yaml
          workflow_conclusion: success
          commit: ${{ env.SHA }}
          name: ${{ env.ARTIFACT_NAME }}

      - name: Publish summary
        run: |
          echo "## Deployment for Track: ${{ env.TRACK}}" >> $GITHUB_STEP_SUMMARY
          echo "**Rollout**: ${{ env.ROLLOUT }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch/tag**: [${{ env.GITREF }}](https://github.com/${{ github.repository }}/tree/${{ env.GITREF }})" >> $GITHUB_STEP_SUMMARY
          echo "**Commit hash**: [${{ env.SHA }}](https://github.com/${{ github.repository }}/commit/${{ env.SHA }})" >> $GITHUB_STEP_SUMMARY
          echo "**aab**: $(ls *.aab)" >> $GITHUB_STEP_SUMMARY

      - name: Release ${{ env.ARTIFACT_NAME }} build to ${{ env.ROLLOUT }} of ${{ env.TRACK}} track from ${{ env.GITREF }}@${{ env.SHA }}
        run: |
          echo fastlane supply \
            --package_name ${{ env.PACKAGE_NAME }} \
            --track ${{ env.TRACK}} \
            --aab_path *.aab \
            --skip_upload_apk \
            --rollout ${{ env.ROLLOUT }}
        env:
          SUPPLY_JSON_KEY_DATA: "" #"${{ secrets.GOOGLE_CLOUD_API_CREDENTIALS }}" #remove when testing done
          SUPPLY_UPLOAD_MAX_RETRIES: 1